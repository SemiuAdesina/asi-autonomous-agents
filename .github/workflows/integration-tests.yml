name: Integration Tests Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  integration-tests:
    name: Full Stack Integration Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: backend/requirements.txt
        
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Install backend dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
      
    - name: Start backend server
      working-directory: ./backend
      run: |
        export DATABASE_URL="postgresql://postgres:postgres@localhost:5432/test_db"
        export REDIS_URL="redis://localhost:6379/0"
        python app.py &
        sleep 10
        
    - name: Start frontend server
      working-directory: ./frontend
      run: |
        npm start &
        sleep 15
        
    - name: Wait for services
      run: |
        timeout 30 bash -c 'until curl -f http://localhost:3000; do sleep 2; done'
        timeout 30 bash -c 'until curl -f http://localhost:5000/api/agents; do sleep 2; done'
        
    - name: Run API integration tests
      working-directory: ./backend
      run: |
        python -m pytest tests/integration/ -v
        
    - name: Run frontend integration tests
      working-directory: ./frontend
      run: |
        npm run test:integration || echo "Integration tests not configured"
        
    - name: Run E2E tests
      run: |
        npx playwright install
        npx playwright test || echo "E2E tests not configured"
        
    - name: Upload integration test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: integration-test-results
        path: |
          backend/test-results.xml
          frontend/test-results/
        retention-days: 7

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: [integration-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        cd frontend && npm ci
        cd ../backend && pip install -r requirements.txt
        
    - name: Start services
      run: |
        cd backend && python app.py &
        cd frontend && npm start &
        sleep 20
        
    - name: Run load tests
      run: |
        npx artillery run performance-tests.yml || echo "Performance tests not configured"
        
    - name: Upload performance results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-test-results
        path: performance-results/
        retention-days: 7
