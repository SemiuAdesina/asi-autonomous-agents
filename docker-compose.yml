version: '3.8'

services:
  # Frontend - Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - ETHERSCAN_API_KEY=1TDVEAUG58UJERFH926EFRXTUBDDBKNNRX
      - NEXT_PUBLIC_API_URL=http://localhost:5001
      - NEXT_PUBLIC_AGENTVERSE_URL=https://agentverse.ai
    depends_on:
      - backend
    restart: unless-stopped

  # Backend - Flask API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=false
      - DATABASE_URL=postgresql://asi_user:asi_password_2024@postgres:5432/asi_agents
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET_KEY=jXOTT9i3Gk/WmG+snMX0F3SivPM/rIqiXyY9GvczMYM=
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  # Healthcare Agent
  healthcare-agent:
    build:
      context: ./backend
      dockerfile: Dockerfile.agent
    ports:
      - "8001:8001"
    environment:
      - AGENT_PORT=8001
      - AGENT_NAME=Healthcare Assistant
      - METTA_ENDPOINT=http://localhost:8080
    restart: unless-stopped
    command: ["python3", "agents/healthcare_agent/main.py"]

  # Financial Agent
  financial-agent:
    build:
      context: ./backend
      dockerfile: Dockerfile.agent
    ports:
      - "8003:8003"
    environment:
      - AGENT_PORT=8003
      - AGENT_NAME=Financial Advisor
      - ETHERSCAN_API_KEY=1TDVEAUG58UJERFH926EFRXTUBDDBKNNRX
    restart: unless-stopped
    command: ["python3", "agents/financial_agent/main.py"]

  # Logistics Agent
  logistics-agent:
    build:
      context: ./backend
      dockerfile: Dockerfile.agent
    ports:
      - "8002:8002"
    environment:
      - AGENT_PORT=8002
      - AGENT_NAME=Logistics Coordinator
    restart: unless-stopped
    command: ["python3", "agents/logistics_agent/main.py"]

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=asi_agents
      - POSTGRES_USER=asi_user
      - POSTGRES_PASSWORD=asi_password_2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: asi-agents-network